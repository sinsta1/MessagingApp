package api

import (
    "encoding/json"
    "net/http"
    "messagingApp/backend/pkg/db"
    "messagingApp/backend/pkg/models"
)

// Handler for retrieving all customers
func HandleCustomers(w http.ResponseWriter, r *http.Request) {
    if r.Method == http.MethodGet {
        customers, err := db.GetAllCustomers()
        if err != nil {
            http.Error(w, "Failed to fetch customers", http.StatusInternalServerError)
            return
        }
        json.NewEncoder(w).Encode(customers)
    } else if r.Method == http.MethodPost {
        var customer models.Customer
        err := json.NewDecoder(r.Body).Decode(&customer)
        if err != nil {
            http.Error(w, "Invalid request body", http.StatusBadRequest)
            return
        }

        // The database should handle the auto-increment of ID, and created_at is auto-generated by the DB
        err = db.CreateCustomer(&customer)
        if err != nil {
            http.Error(w, "Failed to create customer", http.StatusInternalServerError)
            return
        }

        w.WriteHeader(http.StatusCreated)
        json.NewEncoder(w).Encode(customer)
    } else {
        http.Error(w, "Invalid request method", http.StatusMethodNotAllowed)
    }
}
